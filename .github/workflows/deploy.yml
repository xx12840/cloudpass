name: Deploy CloudPass

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build frontend
        run: npm run build
      
      - name: Install Wrangler CLI
        run: npm install -g wrangler
      
      - name: Create Pages project if not exists
        run: |
          # Try to get project info, create if it doesn't exist
          if ! npx wrangler pages project get cloudpass --json > /dev/null 2>&1; then
            echo "Creating Pages project 'cloudpass'..."
            npx wrangler pages project create cloudpass --production-branch=main
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      
      - name: Deploy to Cloudflare Pages
        run: npx wrangler pages deploy build --project-name=cloudpass --commit-dirty=true
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
  
  deploy-workers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Wrangler CLI
        run: npm install -g wrangler
      
      - name: Deploy Workers
        run: npx wrangler deploy workers/index.js --env production
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
